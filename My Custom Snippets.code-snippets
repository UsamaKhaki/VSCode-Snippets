{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	/* 
		* CSS Snippets
	*/
	"CSS Coments": {
		"prefix": "css//",
		"scope": "css",
		"body": [
		  "/* ------------------------------------------ */",
		  "/* ############### $1 ############### */",
		  "/* ------------------------------------------ */"
		],
		"description": "CSS Coments"
	},
	"max-media query": {
		"prefix": "max-media",
		"scope": "css",
		"body": [
		  "@media (max-width: $1){",
		  "    $2",
		  "}"
		],
		"description": "max-media query"
	},
	"min-media query": {
		"prefix": "min-media",
		"scope": "css",
		"body": [
		  "@media (min-width: $1){",
		  "    $2",
		  "}"
		],
		"description": "min-media query"
	},
	"Display Flex": {
		"prefix": "d-flex",
		"scope": "css",
		"body": [
		  "display: -webkit-box; ",
		  "display: -moz-box;",
		  "display: -ms-flexbox;",
		  "display: -webkit-flex; ",
		  "display: flex;"
		],
		"description": "Display Flex"
	},


	/* 
		* Bootstrap Snippets
	*/
	"Custom Form Group": {
		"prefix": "cfgroup",
		"scope": "html, blade",
		"body": [
		  "<div class=\"form-group\">",
		  "    <label for=\"\">$1</label>",
		  "    <input type=\"text\" name=\"$2\" placeholder=\"$3\" class=\"form-control\">",
		  "</div>"
		],
		"description": "Custom Form Group"
	},
	"Custom Input Fields": {
		"prefix": "c-input",
		"scope": "html, blade",
		"body": [
			"<input type=\"text\" name=\"$2\" id=\"$3\" placeholder=\"$4\" class=\"form-control\">",
		],
		"description": "Custom Input Fields"
	},
	"Custom Select Tag": {
		"prefix": "c-select",
		"scope": "html, blade",
		"body": [
			"<select name=\"$1\" id=\"$2\" class=\"form-control\">",
			"	<option value=\"\"></option>",
			"</select>",
		],
		"description": "Custom Select tag"
	},


	/* 
		* Jquery Snippets
	*/
	"Ajax Snippet": {
		"prefix": "$.fn.ajax",
		"scope": "javascript,typescript",
		"body": [
		  "$.ajax({",
		  "    url: \"$1\",",
		  "    dataType: \"$2\",",
		  "    method: \"$3\",",
		  "    data: {$4},",
		  "    success: (response) => {",
		  "",
		  "    },",
		  "    error: (xhr, ajaxOptions, thrownError) => {",
		  "",
		  "    }",
		  "})"
		],
		"description": "Ajax Snippet"
	},
	"Jquery Each Function": {
		"prefix": "$.fn.each",
		"scope": "javascript,typescript",
		"body": [
		  "$.each($($1), function (ii, ele) {",
		  "    $2",
		  "})"
		],
		"description": "Jquery Each Function"
	},
	"Jquery On function": {
		"prefix": "jqon",
		"scope": "javascript,typescript",
		"body": [
		  "$(\"$1\").on(\"$2\", function($3){",
		  		"$4",
		  "});"
		],
		"description": "Jquery On function"
	},
	"New Jquery Funciton": {
		"prefix": "jqfn",
		"scope": "javascript,typescript",
		"body": [
		  "$.fn.$1 = ($2) => {",
		  "    $3",
		  "}"
		],
		"description": "New Jquery Funciton"
	},
	"Sidebar Active Function": {
		"prefix": "$.fn.sidebaractive",
		"scope": "javascript,typescript",
		"body": [
		  "$.fn.sidebarActive('{{ route('$1') }}');"
		],
		"description": "Sidebar Active Function"
	},
	"Get Placeholder": {
		"prefix": "$.fn.getPlaceholder",
		"body": [
		  "$.fn.getPlaceholder();"
		],
		"description": "Get Placeholder"
	},


	/* 
		* Jquery Plugins Snippets
	*/
	"DateRange Picker": {
		"prefix": "$.fn.daterangepicker",
		"scope": "javascript,typescript",
		"body": [
		  "$('#$1').daterangepicker($2);"
		],
		"description": "Single Date Picker plugin"
	},
	"Jquery Datatable": {
		"prefix": "$.fn.datatable",
		"scope": "javascript,typescript",
		"body": [
		  "$(document).ready( function () {",
		  "    $('#$1').DataTable({",
		  "        processing: true,",
		  "        serverSide: true,",
		  "        ajax: '{{url()->current()}}',",
		  "        columns: [",
		  "            {data: \"id\", name: 'id'},",
		  "            {data: \"$2\", name: '$2'},",
		  "        ],",
		  "        \"lengthMenu\": [ 10, 25, 50, 75, 100 ],",
		  "        dom:",
		  "            \"<'row datatble-header-row'<'col col-sm-4 col-xs-12'l><'col col-sm-4 col-xs-12 mb-sm-5 text-center'><'col col-sm-4 col-xs-12'f>>\" +",
		  "            \"<'row datatble-body-row'<'col col-sm-12 col-xs-12'tr>>\" +",
		  "            \"<'row datatble-footer-row'<'col col-sm-5 col-xs-12'i><'c col-xs-12ol col-sm-7'p>>\",",
		  "        buttons: [",
		  "            'copy', 'csv', 'excel', 'pdf', 'print'",
		  "        ],",
		  "    });",
		  "});"
		],
		"description": "Jquery Datatable"
	},
	"Jquery Validation": {
		"prefix": "$.fn.validate",
		"scope": "javascript,typescript",
		"body": [
		  "$(\"$1\").validate({",
		  "    submitHandler: function (form) {",
		  "        form.submit();",
		  "    },",
		  "    rules: {",
		  "        $2: {",
		  "            required: true,",
		  "        }",
		  "    }",
		  "});"
		],
		"description": "Jquery Validation"
	},
	"Js Confirm": {
		"prefix": "$.fn.jsconfirm",
		"scope": "javascript,typescript",
		"body": [
			"$.confirm({",
			"    title: '$1',",
			"    content: '$2',",
			"    theme: \"${3|light,material|}\",",
			"    type: \"dark\",",
			"	animation: 'scale',",
			"	closeAnimation: 'scale',",
			"	animateFromElement: false,",
			"    buttons: {",
			"        confirm: {",
			"            text: \"$4\",",
			"            btnClass: \"btn-green\",",
			"            action: function () {",
			"                $5",
			"            }",
			"        },",
			"        cancel: function () {",
			"            ",
			"        }",
			"    }",
			"})"
		],
		"description": "Js Confirm"
	},
	"Loading Overlay": {
		"prefix": "$.fn.LoadingOverlay",
		"scope": "javascript,typescript",
		"body": [
		  "$('#$1').LoadingOverlay('${2|show,hide|}');"
		],
		"description": "Loading overlay Plugin"
	},
	"Select2 Tag": {
		"prefix": "$.fn.select2",
		"scope": "javascript,typescript",
		"body": [
		  "$(\"#$1\").select2({",
		  "    width: \"100%\",",
		  "    placeholder: \"Select $2\",",
		  "});"
		],
		"description": "Select2 Tag"
	},
	"Single Date Picker": {
		"prefix": "$.fn.singleDatePicker",
		"scope": "javascript,typescript",
		"body": [
		  "$('#$1').daterangepicker({",
		  "    \"singleDatePicker\": true,$2",
		  "});"
		],
		"description": "Single Date Picker"
	},


	/* 
		* PHP Snippets
	*/
	"Route Name": {
		"prefix": "routeName",
		"scope": "html, blade",
		"body": [
		  "{{ Route::current()->getName() }}"
		],
		"description": "Route Name"
	},
	"laravel validation code": {
		"prefix": "laravel:validate",
		"scope": "php",
		"body": [
		  "$${rules} = [",
		  "    \"$1\" => \"required\",",
		  "];",
		  "",
		  "$${validate} = Validator::make($${request}->all(), $${rules});",
		  "",
		  "if ($${validate}->fails()) {",
		  "    return response()->json([\"status\"=>\"Error\", \"errors\"=>$${validate}->errors()->toArray()]);",
		  "}"
		],
		"description": "laravel validation code"
	},
	"Redirect Route With Message": {
		"prefix": "redirectwithmsg",
		"scope": "php",
		"body": [
		  "return redirect()->route('$1')->with(['msg'=>['status'=>'$2','html'=>\"$3\"]]);",
		],
		"description": "laravel Redirect Route With Message"
	},
}